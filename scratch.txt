// const isPrime = num => {
//     let divisor = num - 1
//     let result = false
//     while (!result) {
//         let num2 = true
//         for (divisor; divisor > 1; divisor--) {
//             if (num % divisor === 0) {
//                 num2 = false // not prime                
//             }
//            result = num2
//         }
//         return result
//     }
//   }
  
//   console.log(isPrime(121332))
  
// //   isPrime(2) // true
// //   isPrime(3) // true
// //   isPrime(4) // false
// //   isPrime(5) // true

// check if prime
// let divideBy = nextPalindromicNum - 1
//     let isPrime = false
//     while (!isPrime)  {
//         let isDivisible = false
//         for (divideBy; divideBy > 1; divideBy--) {
//             if (nextPalindromicNum % divideBy != 0) {
//                 isDivisible = true
//             }
//             isPrime = isDivisible
//         }
//         return 'Is ' + nextPalindromicNum + ' prime? ' + isPrime
//     }

const isPrime = num => {
    // let isPrime = false
    // while (!isPrime) {
    //     let isDivisibleBy = true
    //     for (let i = 2; i < num; i++) {
    //         if (num % i == 0) {
    //             i
    //         }
    //     }
    // }
    for(let i = 2; i < num; i++)
      if(num % i === 0) return false;
    return num > 1;
}
console.log(isPrime(102))

/* 

initialize isPalindrome to false

initialize isPrime to false

declare found

declare nextPalindromicPrimeNum

input num

check if num is a palindrome

if num is palindrome

    set isPalindrome to true

    check if num is prime

    if num is prime

        set isPrime to true

        if (isPalindrome && isPrime == true)

            set found to true
            
        else 

            set found to false
    else
    
        return isPrime
        
else

    increment num by 1
*/
